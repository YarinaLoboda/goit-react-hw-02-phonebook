{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["AddContactButton","styled","button","InputValue","input","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","reset","onSubmit","this","type","onChange","pattern","title","required","Component","Filter","onChangeFilter","DeleteContactButton","ContactList","contacts","onDeleteButtonClick","map","id","onClick","Global","createGlobalStyle","PhoneBookContainer","div","App","filter","updateStateContact","param","nameToFind","toLowerCase","contact","includes","length","toast","error","newContact","nanoid","prevState","updateStateFilter","getFilteredContacts","normalizedFilter","deleteContactById","idToDel","FilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e6f3858.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst AddContactButton = styled.button`\r\n   {\r\n    padding: 5px 30px;\r\n    margin: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10%;\r\n    box-shadow: 0px 4px 10px 2px rgba(black, 0.2);\r\n    font-weight: bold;\r\n    color: #00ff00;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst InputValue = styled.input`\r\n   {\r\n    padding: 5px;\r\n    margin: 10px;\r\n    background-color: #efefef;\r\n    border-color: #cccccc;\r\n  }\r\n`;\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:&nbsp;&nbsp;&nbsp;\r\n          <InputValue\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number:\r\n          <InputValue\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <AddContactButton type=\"submit\">Add contact</AddContactButton>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst InputValue = styled.input`\r\n   {\r\n    padding: 5px;\r\n    margin: 10px;\r\n    background-color: #efefef;\r\n    border-color: #cccccc;\r\n  }\r\n`;\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <label>\r\n      <i>Find contacts by name</i>\r\n      <InputValue\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst DeleteContactButton = styled.button`\r\n   {\r\n    padding: 5px 20px;\r\n    margin: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10%;\r\n    box-shadow: 0px 4px 10px 2px rgba(black, 0.2);\r\n    color: #ff0000;\r\n    border-color: #cccccc;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ContactList = ({ contacts, onDeleteButtonClick }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <DeleteContactButton\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => onDeleteButtonClick({ id })}\r\n          >\r\n            Delete\r\n          </DeleteContactButton>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n\r\n  onDeleteButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport toast, { Toaster } from 'react-hot-toast';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nconst Global = createGlobalStyle`\n*{\n  margin: 0px;\n  padding: 0px;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 20px;\n}\n\nh1, h2{ \nmargin: 10px;\n}\n`;\n\nconst PhoneBookContainer = styled.div`\n   {\n    width: 100%;\n  }\n`;\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  updateStateContact = param => {\n    const nameToFind = param.name.toLowerCase();\n\n    const result = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(nameToFind),\n    );\n\n    if (result.length > 0) {\n      toast.error('This Name is already exists !');\n      return;\n    }\n\n    const newContact = { id: nanoid(5), ...param };\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  updateStateFilter = filter => {\n    this.setState({ filter });\n\n    this.getFilteredContacts();\n  };\n\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContactById = id => {\n    const { id: idToDel } = id;\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== idToDel),\n      };\n    });\n  };\n\n  render() {\n    const FilteredContacts = this.getFilteredContacts();\n\n    return (\n      <>\n        <Global />\n        <PhoneBookContainer>\n          <Toaster />\n          <h1>Phonebook</h1>\n          <ContactForm onAddContact={this.updateStateContact} />\n          <h2>Contacts</h2>\n\n          {this.state.contacts.length > 0 && (\n            <Filter\n              value={this.state.filter}\n              onChangeFilter={this.updateStateFilter}\n            />\n          )}\n\n          <ContactList\n            contacts={FilteredContacts}\n            onDeleteButtonClick={this.deleteContactById}\n          />\n        </PhoneBookContainer>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}